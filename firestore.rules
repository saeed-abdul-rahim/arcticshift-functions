rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
  	function userId() {
    	return request.auth.uid;
    }
    
    function isAuthorized(shopId) {
      return request.auth.token.claims.hasAny([
        { 'shopId': shopId, 'role': 'admin' },
        { 'shopId': shopId, 'role': 'staff' }
      ])
  	}
    
    function getUser(userId) {
    	return get(/databases/$(database)/documents/v1/db/users/$(userId))
    }
    
    function canSeeUser(userDoc) {
    	return resource.data.admin.hasAny(userDoc.data.admin) ||
      				resource.data.staff.hasAny(userDoc.data.staff)
    }

    match /v1/db {
      
      match /{document=**} {
      	allow read: if true;
      }
      
      match /users/{id} {
      	allow read: if userId() == id || canSeeUser(getUser(userId()));
      }
      
      match /orders/{id} {
      	allow read: if resource.data.userId == userId() || isAuthorized(resource.data.shopId)
      }

      match /drafts/{id} {
      	allow read: if resource.data.userId == userId() || isAuthorized(resource.data.shopId)
      }
      
    }
  }
}